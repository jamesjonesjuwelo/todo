// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Item Component renders correctly 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <ItemComponent
    deleteItem={[MockFunction]}
    item={
      Object {
        "completed": false,
        "createdAt": "Test Date",
        "description": "Test Description",
        "id": 1,
        "name": "Test Name",
      }
    }
    updateItem={[MockFunction]}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": Array [
        <span />,
        <styled.div>
          <styled.p>
            Test Date
          </styled.p>
          <styled.div>
            <styled.p>
              Test Description
            </styled.p>
            <span />
            <span />
          </styled.div>
          <styled.p>
            Test Name
          </styled.p>
          <span />
        </styled.div>,
      ],
      "onMouseEnter": [Function],
      "onMouseLeave": [Function],
      "style": Object {
        "opacity": 1,
      },
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {},
        "ref": null,
        "rendered": null,
        "type": "span",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": Array [
            <styled.p>
              Test Date
            </styled.p>,
            <styled.div>
              <styled.p>
                Test Description
              </styled.p>
              <span />
              <span />
            </styled.div>,
            <styled.p>
              Test Name
            </styled.p>,
            <span />,
          ],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": "Test Date",
            },
            "ref": null,
            "rendered": "Test Date",
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": Array [
                <styled.p>
                  Test Description
                </styled.p>,
                <span />,
                <span />,
              ],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": "Test Description",
                },
                "ref": null,
                "rendered": "Test Description",
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {},
                "ref": null,
                "rendered": null,
                "type": "span",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {},
                "ref": null,
                "rendered": null,
                "type": "span",
              },
            ],
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": "Test Name",
            },
            "ref": null,
            "rendered": "Test Name",
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {},
            "ref": null,
            "rendered": null,
            "type": "span",
          },
        ],
        "type": [Function],
      },
    ],
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": Array [
          <span />,
          <styled.div>
            <styled.p>
              Test Date
            </styled.p>
            <styled.div>
              <styled.p>
                Test Description
              </styled.p>
              <span />
              <span />
            </styled.div>
            <styled.p>
              Test Name
            </styled.p>
            <span />
          </styled.div>,
        ],
        "onMouseEnter": [Function],
        "onMouseLeave": [Function],
        "style": Object {
          "opacity": 1,
        },
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {},
          "ref": null,
          "rendered": null,
          "type": "span",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": Array [
              <styled.p>
                Test Date
              </styled.p>,
              <styled.div>
                <styled.p>
                  Test Description
                </styled.p>
                <span />
                <span />
              </styled.div>,
              <styled.p>
                Test Name
              </styled.p>,
              <span />,
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": "Test Date",
              },
              "ref": null,
              "rendered": "Test Date",
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": Array [
                  <styled.p>
                    Test Description
                  </styled.p>,
                  <span />,
                  <span />,
                ],
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": "Test Description",
                  },
                  "ref": null,
                  "rendered": "Test Description",
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {},
                  "ref": null,
                  "rendered": null,
                  "type": "span",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {},
                  "ref": null,
                  "rendered": null,
                  "type": "span",
                },
              ],
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": "Test Name",
              },
              "ref": null,
              "rendered": "Test Name",
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {},
              "ref": null,
              "rendered": null,
              "type": "span",
            },
          ],
          "type": [Function],
        },
      ],
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
